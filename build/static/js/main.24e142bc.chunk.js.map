{"version":3,"sources":["components/Form.jsx","components/Content.jsx","modules/actions.js","components/Index.jsx","components/Tab.jsx","components/Screen.jsx","components/Setting.jsx","App.js","reportWebVitals.js","modules/reducer.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","useButtonStyles","button","Form","onClickChangeButton","info","contentId","localStorage","getItem","localInput","JSON","parse","console","log","classes","buttonClasses","useState","input","setInput","stageList","setStageList","prefectureList","setPrefectureList","industryList","setindustryList","useEffect","axios","get","then","res","data","saveUserInfo","setItem","stringify","className","root","noValidate","autoComplete","type","id","style","color","backgroundColor","value","email","onChange","document","getElementById","FormControl","Select","defaultValue","displayEmpty","MenuItem","prefecture","name","map","onClick","stage","industry","Button","variant","post","response","finally","endIcon","disabled","Content","onClickBackButton","state","useSelector","loading","Typography","Skeleton","animation","width","content","title","subtitle","target","summary","body","inquiry","replace","TypeError","DeleteBr","href","getUserInfo","a","fetchContentData","dispatch","contentUrl","usage","payload","fetchIndexData","apiUrl","items","forEach","result","postJson","authority","competent_authorities","push","Index","onClickPost","useDispatch","Array","keys","i","Box","pb","FooterWrapper","styled","div","Tab","createMuiTheme","palette","primary","main","typography","useNextVariants","posts","onClickFormTab","onClickIndexTab","onClickContentTab","onClickAboutTab","setValue","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","label","icon","initialScreenState","isVisibleForm","isVisibleIndex","isVisibleContent","isVisibleAbout","Screen","switchScreen","setScreen","setContentId","changeContentId","Setting","onClickInitButton","InputLabel","htmlFor","App","exact","path","render","to","window","location","reload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.24e142bc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { GAS_URL } from \"../credentials.js\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\nimport Icon from '@material-ui/core/Icon';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { Input } from \"@material-ui/core\";\n\nconst stageUrl = `https://jirei-seido-api.mirasapo-plus.go.jp/categories/stages`;\nconst prefectureUrl = \"https://jirei-seido-api.mirasapo-plus.go.jp/prefectures\";\nconst industryUrl = \"https://jirei-seido-api.mirasapo-plus.go.jp/categories/industries\";\n\nconst GASUrl = 'https://script.google.com/macros/s/AKfycbyOPLJJH0SDJabJ8ABUCeYFgVWRT5126k1MN0JSOdroHI-zh5dsGUQB8lsE7rI48RCHlQ/exec';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n  }));\n\nconst useButtonStyles = makeStyles((theme) => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }));\n// ------------------フォームコンポーネント----------------\nexport const Form = ({\n    onClickChangeButton,\n    contentId,\n}) => {\n    const info = localStorage.getItem(\"info\");\n    const localInput = info ? JSON.parse(info) : console.log(\"error: localstrage is null\");\n\n    const classes = useStyles();\n    const buttonClasses = useButtonStyles();\n    const [input, setInput] = useState(localInput);\n    const initialStageList = [];\n    const [stageList, setStageList] = useState([]);\n    const initialPrefectureList = [];\n    const [prefectureList, setPrefectureList] = useState([]);\n    const initialIndustryList = [];\n    const [industryList, setindustryList] = useState([]);\n    useEffect(() => {\n        axios.get(stageUrl)\n        .then(res => {\n            setStageList(res.data);\n        });\n        axios.get(prefectureUrl)\n        .then(res => {\n            setPrefectureList(res.data);\n        });\n        axios.get(industryUrl)\n        .then(res => {\n            setindustryList(res.data);\n            console.log(industryList);\n        });\n    }, []);\n    // -----------------------フォームの保存用処理---------------------------\n    const saveUserInfo = () => {\n        localStorage.setItem(\"info\", JSON.stringify(input)); // localStrageにjsonとして保存\n    }\n    const submit = (e) => {\n        if (e.key === 'Enter') {\n            saveUserInfo();\n            return;\n        }\n    }\n    const changeInput1 = (e) => {\n        setInput({\n            ...input,\n            prefecture: e.target.value\n        });\n    }\n\n    function buttonClick(){\n      saveUserInfo()\n    }\n\n    function postData(){\n        axios.post(GASUrl, JSON.stringify(input))\n        .then(response => {\n          console.log(\"送信結果:\",response.data)\n        })\n        .finally(() => {\n            onClickChangeButton();\n        });\n    }\n\n\n    /*\n    const info = localStorage.getItem(\"info\");\n    const localInput = info ? JSON.parse(info) : {\n        prefecture: \"\",\n    }\n    */\n    let index = 0;\n    // --------------------------レンダリング----------------------------\n    return(\n        <>\n        <div>\n        <br/>\n        </div>\n        <div className=\"form-header\">\n            <p>設定</p>\n        </div>\n            <div className=\"form-container\">\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <p>メールアドレス<span className=\"required\">必須</span></p>\n                    <input type=\"email\" id=\"email\" style={{color: \"\", backgroundColor: \"white\" , margin: 7}} value={input.email} \n                    onChange={()=> {\n                      setInput({\n                        ...input,\n                        email: document.getElementById(\"email\").value\n                      });\n                    }}\n                    />\n                  \n                </form>\n                <div>\n                    <p>会社の地域<span className=\"required\">必須</span></p>\n                    <FormControl className={classes.formControl} style={{ color: \"\", backgroundColor: \"white\" }}>\n                    {/*<InputLabel htmlFor=\"grouped-select\">{`会社の地域 (現在: ${localInput.prefecture})`}</InputLabel>*/}\n                    <Select defaultValue=\"\" id=\"grouped-select\" displayEmpty>\n                        <MenuItem value=\"\">\n                        <em>{input.prefecture.name}</em>\n                        </MenuItem>\n                        {prefectureList.map(prefecture => (\n                            <MenuItem\n                            onClick={() => {\n                                setInput({\n                                    ...input,\n                                    prefecture: {id: prefecture.id, name: prefecture.name}\n                                });\n                            }}\n                            value={prefecture.name}\n                            >{prefecture.name}</MenuItem>\n                        ))\n                        }\n                    </Select>\n                    </FormControl>\n                </div>\n                <div>\n                    <p>事業ステージ<span className=\"required\">必須</span></p>\n                    <FormControl className={classes.formControl} style={{ color: \"\", backgroundColor: \"white\" }}>\n                    {/*<InputLabel htmlFor=\"grouped-select\">{`事業ステージ (現在: ${localInput.stage.name})`}</InputLabel>*/}\n                    <Select defaultValue=\"\" id=\"grouped-select\" displayEmpty>\n                        <MenuItem\n                        value=\"\">\n                        <em>{input.stage.name}</em>\n                        </MenuItem>\n                        {stageList.map(stage => (\n                            <MenuItem\n                            value={stage.name}\n                            onClick={() => {\n                                setInput({\n                                    ...input,\n                                    stage: {id: stage.id, name: stage.name}\n                                });\n                            }}\n                            >{stage.name}</MenuItem>\n                        ))\n                        }\n                    </Select>\n                    </FormControl>\n                </div>\n                <div>\n                    <p>業種<span className=\"required\">必須</span></p>\n                    <FormControl className={classes.formControl} style={{ color: \"\", backgroundColor: \"white\" }}>\n                    {/*<InputLabel htmlFor=\"grouped-select\">{`会社の地域 (現在: ${localInput.industry.name})`}</InputLabel>*/}\n                    <Select defaultValue=\"\" id=\"grouped-select\" displayEmpty>\n                        <MenuItem value=\"\">\n                        <em>{input.industry.name}</em>\n                        </MenuItem>\n                        {industryList.map(industry => (\n                            <MenuItem\n                            value={industry.name}\n                            onClick={() => {\n                                setInput({\n                                    ...input,\n                                    industry: {id: industry.id, name: industry.name}\n                                });\n                            }}\n                            >{industry.name}</MenuItem>\n                        ))\n                        }\n                    </Select>\n                    </FormControl>\n                </div>\n            </div>\n            <div className=\"form-footer\">\n                <div>\n                <Button\n                    type = \"submit\"\n                    name=\"action\"\n                    value={JSON.stringify(input)}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={buttonClasses.button}\n                    id=\"btn\"\n                    onClick={() => {saveUserInfo();postData()}}\n                    endIcon={<CloudUploadIcon></CloudUploadIcon>}\n                    disabled={!input.email}\n                >\n                    条件を変更\n                </Button>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from \"react\";\nimport {useSelector} from 'react-redux'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport PublicIcon from '@material-ui/icons/Public';\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nexport const Content = ({\n    onClickBackButton,\n}) => {\n    const state = useSelector(state => state)\n    console.log(state)\n\n    function DeleteBr(){\n        try {\n            return state.content.inquiry.replace(/<br>/g, '')\n          } catch (TypeError) {\n            return state.content.inquiry\n          }\n    }\n\n    return (\n        <>\n        {state.loading ? (\n            <>\n            <div className=\"content\">\n                <div className=\"content-header\">\n                <ArrowBackIcon\n                className=\"post-icon-1\"\n                onClick = {() => onClickBackButton()}\n                ></ArrowBackIcon>\n                <p>制度詳細</p>\n            </div>\n            <div className=\"content-detail\">\n                <Typography key=\"skeleton-a\" variant=\"h2\">\n                    <Skeleton animation=\"wave\"/>\n                </Typography>\n                <Typography key=\"skeleton-a\" variant=\"h3\">\n                    <Skeleton animation=\"wave\"/>\n                </Typography>\n                <div className=\"content-container\">\n                    <div>\n                        <Typography key=\"skeleton-a\" variant=\"h4\">\n                            <Skeleton animation=\"wave\" width='30%'/>\n                        </Typography>\n                        <Typography key=\"skeleton-a\" variant=\"a\">\n                            <Skeleton animation=\"wave\"/>\n                            <Skeleton animation=\"wave\"/>\n                            <Skeleton animation=\"wave\"/>\n                        </Typography>\n                    </div>\n                    <div>\n                        <Typography key=\"skeleton-a\" variant=\"h4\">\n                            <Skeleton animation=\"wave\" width='30%'/>\n                        </Typography>\n                        <Typography key=\"skeleton-a\" variant=\"a\">\n                            <Skeleton animation=\"wave\"/>\n                            <Skeleton animation=\"wave\"/>\n                            <Skeleton animation=\"wave\"/>\n                        </Typography>\n                    </div>\n                    <div>\n                        <Typography key=\"skeleton-a\" variant=\"a\">\n                            <Skeleton animation=\"wave\"/>\n                            <Skeleton animation=\"wave\"/>\n                            <Skeleton animation=\"wave\"/>\n                        </Typography>\n                    </div>\n                    <div>\n                        <Typography key=\"skeleton-a\" variant=\"h4\">\n                            <Skeleton animation=\"wave\" width='30%'/>\n                        </Typography>\n                        <Typography key=\"skeleton-a\" variant=\"a\">\n                            <Skeleton animation=\"wave\"/>\n                            <Skeleton animation=\"wave\"/>\n                            <Skeleton animation=\"wave\"/>\n                        </Typography>\n                    </div>\n                </div>\n            </div>\n            </div>\n            </>\n            ) : (\n            <div className=\"content\">\n                <div className=\"content-header\">\n                <ArrowBackIcon\n                className=\"post-icon-1\"\n                onClick = {() => onClickBackButton()}\n                ></ArrowBackIcon>\n                <p>制度詳細</p>\n                </div>\n                <div className=\"content-detail\">\n                  <h2>{state.content.title}</h2>\n                  <h3>{state.content.subtitle}</h3>\n                  <div className=\"content-container\">\n                          <div>\n                              <h4>対象の事業者</h4>\n                              <a>{state.content.target}</a>\n                          </div>\n                          <div>\n                              <h4>概要</h4>\n                              <a>{state.content.summary}</a>\n                          </div>\n                          <div>\n                              <a>{state.content.body}</a>\n                          </div>\n                          <div>\n                              <h4>連絡先</h4>\n                              <a>{DeleteBr()}</a>\n                          </div>\n                  </div>\n                </div>\n                <div className=\"content-footer\">\n                    <a href = {'https://seido-navi.mirasapo-plus.go.jp/supports/'+state.content.id}><PublicIcon className=\"post-icon-2\"></PublicIcon><span>webpage</span></a>\n                </div>\n            </div>\n            )\n        }\n    </>\n    );\n}","import axios from 'axios';\n\n//ローカルストレージからデータを取り出す関数\nconst getUserInfo = async () => {\n    try {\n        const info = localStorage.getItem(\"info\");\n        const localInput = info ? JSON.parse(info) : console.log(\"error: localstrage is null\");\n        return localInput\n    } catch {\n        console.log('cannot get localstrage')\n        return null\n    }\n}\n\n// action creator\nexport const fetchContentData = async (dispatch, contentId) => {\n    dispatch({ type: 'REQUEST_FETCH_DATA' });\n    const content = {}\n    const contentUrl = `https://jirei-seido-api.mirasapo-plus.go.jp/supports/${contentId}`;\n    const res = await axios.get(contentUrl);\n    //   console.log(res)\n      content.id = res.data.id;\n      content.title = res.data.title;\n      content.subtitle = res.data.title;\n      content.target = res.data.target;\n      content.summary = res.data.summary;\n      content.body = res.data.usage;\n      content.inquiry = res.data.inquiry;\n    dispatch({\n      type: 'SUCCESS_FETCH_CONTENT',\n      payload: content\n    });\n};\n\nexport const fetchIndexData = async (dispatch) => {\n    dispatch({ type: 'REQUEST_FETCH_DATA' });\n    const post = []\n    const localInput = await getUserInfo()\n    const apiUrl = `https://jirei-seido-api.mirasapo-plus.go.jp/supports?limit=100&stage_category=${localInput.stage.id}&industry_category=${localInput.industry.id}&prefecture.name=${localInput.prefecture.name}`;\n    const res = await axios.get(apiUrl);\n    res.data.items.forEach((result) => {\n      var postJson = {id: result.id, title: result.title, authority: result.competent_authorities[0].name};\n      post.push(postJson);\n    })\n    dispatch({\n      type: 'SUCCESS_FETCH_INDEX',\n      payload: post\n    });\n};","import React from \"react\";\nimport {useSelector, useDispatch} from 'react-redux'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport {fetchContentData} from \"../modules/actions\"\n\nexport const Index = ({\n    onClickPost,\n}) => {\n    const state = useSelector(state => state)\n    const dispatch = useDispatch()\n    return (\n        <div className=\"index-container\">\n            {state.loading ? (\n                <>\n                    {[...Array(10).keys()].map(i =>\n                        <div className=\"posts-index-skeleton-item\">\n                            <Box pb={3}>\n                            <Typography key={i} variant=\"h5\">\n                                <Skeleton animation=\"wave\" width=\"70%\"/>\n                                <Skeleton animation=\"wave\" width=\"70%\"/>\n                                <Skeleton animation=\"wave\" width=\"70%\"/>\n                            </Typography>\n                            </Box>\n                            <Typography key=\"skeleton-a\" variant=\"a\">\n                                <Skeleton animation=\"wave\" width='30%'/>\n                            </Typography>\n                        </div>\n                    )}\n                </>\n                ) : (\n                    state.post.map(post => (\n                        <div\n                        className=\"posts-index-item\"\n                        onClick={() => {fetchContentData(dispatch, post.id); onClickPost();}}\n                        >\n                            <a className=\"post-title\">{post.title}</a> <br></br>\n                            <div className=\"post-footer\">\n                                <p className=\"post-letter\">{post.authority}</p>\n                                <ArrowForwardIcon className=\"post-icon\"/>\n                            </div>\n                        </div>\n                        )\n                        )\n                )\n            }\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\nimport AssignmentRoundedIcon from '@material-ui/icons/AssignmentRounded';\n\nconst FooterWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  padding: ;\n  border-top: thin solid #A9A9A9;\n  width: 100%;\n  height: 8vh;\n  position: fixed;\n  bottom: 0;\n  background-color: #ffffff;\n`;\nconst TabWrapper = styled.div`\n  width: 50vw; \n`; // TODO: オーバーレイリストボタン実装後50vwに修正\nconst IconWrappr = styled.div`\n    text-align: center;\n`;\n/*------------タブのスタイル----------*/\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#0080c9',\n      },\n    },\n    typography: {\n      useNextVariants: true,\n    },\n  });\n  \n  const styles = {\n    root: {\n      width: 500,\n    },\n  };\n/*------------タブコンポーネント----------*/\nexport const Tab = ({\n    posts,\n    onClickFormTab,\n    onClickContentTab,\n    onClickIndexTab,\n    onClickAboutTab,\n}) => {\n    const [value, setValue] = useState('使い方')\n    const handleChange = () => {\n        setValue( {value} );\n      }\n    \n    return (\n    <>\n    <FooterWrapper>\n        <BottomNavigation\n        value={value}\n        onChange={(event, newValue) => {\n            setValue(newValue);\n        }}\n        showLabels\n        className=\"tab-icon\"\n        >    \n            {/*MEMO: BottomNavigationActionは, BottomNavigation直下じゃないと動作しないので注意*/}\n            <BottomNavigationAction label=\"制度一覧\" icon={<AssignmentRoundedIcon />} style={{ color: \"#2699FB\", backgroundColor: \"\" }}\n            onClick={() => {onClickIndexTab()}}\n            />\n            <BottomNavigationAction label=\"設定\" icon={<SettingsRoundedIcon />} style={{ color: \"#2699FB\", backgroundColor: \"\" }}\n            onClick={() => onClickFormTab()}\n            />\n            {/*\n            <BottomNavigationAction label=\"ご説明\" icon={<FavoriteIcon />}　style={{ color: \"#2699FB\", backgroundColor: \"\" }} \n            onClick={() => onClickAboutTab(posts)}\n            />\n            */}\n        </BottomNavigation>\n    </FooterWrapper>\n    </>\n    )\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\n// components\nimport { Form } from './Form.jsx';\nimport { Content } from './Content.jsx';\nimport { Index } from './Index.jsx';\nimport { Tab } from './Tab.jsx';\n\nimport { fetchIndexData } from '../modules/actions';\nimport { useDispatch } from \"react-redux\";\n\nconst apiUrl = \"https://jirei-seido-api.mirasapo-plus.go.jp/supports?limit=100&stage_category=1&industry_category=3&prefecture.name=北海道\";\n\nconst initialScreenState = {\n  isVisibleForm: false,\n  isVisibleIndex: true,\n  isVisibleContent: false,\n  isVisibleAbout: false,\n  isVisibleContent: false,\n};\n\nexport const Screen = () => {\n    const [switchScreen, setScreen] = useState(initialScreenState);\n    const [contentId, setContentId] = useState(\"a\")\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        fetchIndexData(dispatch)\n    }, []);\n\n    return (\n      <>\n        <div className=\"responsive\">\n        {switchScreen.isVisibleIndex &&\n        <Index\n        onClickPost={\n          () => setScreen({\n            isVisibleForm: false,\n            isVisibleIndex: false,\n            isVisibleContent: false,\n            isVisibleAbout: false,\n            isVisibleContent: true,\n            })\n          }\n        changeContentId = {\n          (id) => {setContentId(id)}\n        }\n        />\n        }\n        {switchScreen.isVisibleContent &&\n        <Content\n        contentId = {contentId}\n        onClickBackButton={() => setScreen({\n          ...switchScreen,\n          isVisibleForm: false,\n          isVisibleIndex: true,\n          isVisibleContent: false,\n          isVisibleAbout: false,\n          isVisibleContent: false,\n        })\n        }\n        />\n        }\n        {switchScreen.isVisibleForm &&\n          <Form\n          contentId = {contentId}\n          onClickChangeButton={() => setScreen({\n            ...switchScreen,\n            isVisibleForm: false,\n            isVisibleIndex: true,\n            isVisibleContent: false,\n            isVisibleAbout: false,\n            isVisibleContent: false,\n          })\n          }/>\n        }\n        <Tab\n          onClickFormTab={\n            () => setScreen({\n              isVisibleForm: true,\n              isVisibleIndex: false,\n              isVisibleContent: false,\n              isVisibleAbout: false,\n              isVisibleContent: false,\n              })\n            }\n            onClickContentTab={() => setScreen({\n              ...switchScreen,\n              isVisibleForm: false,\n              isVisibleIndex: false,\n              isVisibleContent: true,\n              isVisibleAbout: false,\n              isVisibleContent: false,\n              })\n            }\n            onClickIndexTab={() => setScreen({\n              ...switchScreen,\n              isVisibleForm: false,\n              isVisibleIndex: true,\n              isVisibleContent: false,\n              isVisibleAbout: false,\n              isVisibleContent: false,\n            })\n            }\n            onClickAboutTab={() => setScreen({\n              ...switchScreen,\n              isVisibleForm: false,\n              isVisibleIndex: true,\n              isVisibleContent: false,\n              isVisibleAbout: true,\n              isVisibleContent: false,\n            })\n            }\n        />\n        </div>\n      </>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nconst stageUrl = `https://jirei-seido-api.mirasapo-plus.go.jp/categories/stages`;\nconst prefectureUrl = \"https://jirei-seido-api.mirasapo-plus.go.jp/prefectures\";\nconst industryUrl = \"https://jirei-seido-api.mirasapo-plus.go.jp/categories/industries\";\n\nconst GASUrl = 'https://script.google.com/macros/s/AKfycbyOPLJJH0SDJabJ8ABUCeYFgVWRT5126k1MN0JSOdroHI-zh5dsGUQB8lsE7rI48RCHlQ/exec';\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n  }));\nconst useButtonStyles = makeStyles((theme) => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }));\n// ------------------初期設定コンポーネント----------------\nexport const Setting = ({\n    onClickInitButton,\n}) => {\n    const initialInput = {\n        prefecture: \"\",\n        stage: {\n            id: \"\",\n            name: \"\",\n        },\n        industry: {\n            id: \"\",\n            name: \"\",\n        },\n    };\n\n    const classes = useStyles();\n    const buttonClasses = useButtonStyles();\n    const [input, setInput] = useState(initialInput);\n    const initialStageList = [];\n    const [stageList, setStageList] = useState([]);\n    const initialPrefectureList = [];\n    const [prefectureList, setPrefectureList] = useState([]);\n    const initialIndustryList = [];\n    const [industryList, setindustryList] = useState([]);\n    useEffect(() => {\n        axios.get(stageUrl)\n        .then(res => {\n            setStageList(res.data);\n        });\n        axios.get(prefectureUrl)\n        .then(res => {\n            setPrefectureList(res.data);\n        });\n        axios.get(industryUrl)\n        .then(res => {\n            setindustryList(res.data);\n            console.log(industryList);\n        });\n    }, []);\n    // -----------------------フォームの保存用処理---------------------------\n    const saveUserInfo = () => {\n        localStorage.setItem(\"info\", JSON.stringify(input)); // localStrageにjsonとして保存\n    }\n    const submit = (e) => {\n        if (e.key === 'Enter') {\n            saveUserInfo();\n            return;\n        }\n    }\n    const changeInput1 = (e) => {\n        setInput({\n            ...input,\n            prefecture: e.target.value\n        });\n    }\n\n    function postData(){\n        axios.post(GASUrl, JSON.stringify(input))\n        .then(response => {\n          console.log(\"送信結果:\",response.data)\n        })\n        .finally(() => {\n            onClickInitButton();\n        });\n    }\n\n    /*\n    const info = localStorage.getItem(\"info\");\n    const localInput = info ? JSON.parse(info) : {\n        prefecture: \"\",\n    }\n    */\n    let index = 0;\n    // --------------------------レンダリング----------------------------\n    return(\n        <>\n        <div className=\"form-header\">\n            <p>初期設定</p>\n        </div>\n            <div className=\"form-container\">\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <p>メールアドレス<span className=\"required\">必須</span></p>\n                    <input type=\"email\" id=\"email\" style={{color: \"\", backgroundColor: \"white\" , margin: 7}}\n                    onChange={()=> {\n                      setInput({\n                        ...input,\n                        email: document.getElementById(\"email\").value\n                      });\n                    }}\n                    />\n                </form>\n                <div>\n                    <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"grouped-select\">会社の地域<span className=\"required\">必須</span></InputLabel>\n                    <Select defaultValue=\"\" id=\"grouped-select\">\n                        <MenuItem value=\"\">\n                        <em>会社の地域</em>\n                        </MenuItem>\n                        {prefectureList.map(prefecture => (\n                            <MenuItem\n                            onClick={() => {\n                                setInput({\n                                    ...input,\n                                    prefecture: {id: prefecture.id, name: prefecture.name}\n                                });\n                            }}\n                            value={prefecture.name}\n                            >{prefecture.name}</MenuItem>\n                        ))\n                        }\n                    </Select>\n                    </FormControl>\n                </div>\n                <div>\n                    <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"grouped-select\">事業ステージ<span className=\"required\">必須</span></InputLabel>\n                    <Select defaultValue=\"\" id=\"grouped-select\">\n                        <MenuItem\n                        value=\"\">\n                        <em>事業ステージ</em>\n                        </MenuItem>\n                        {stageList.map(stage => (\n                            <MenuItem\n                            value={stage.name}\n                            onClick={() => {\n                                setInput({\n                                    ...input,\n                                    stage: {id: stage.id, name: stage.name}\n                                });\n                            }}\n                            >{stage.name}</MenuItem>\n                        ))\n                        }\n                    </Select>\n                    </FormControl>\n                </div>\n                <div>\n                    <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"grouped-select\">業種<span className=\"required\">必須</span></InputLabel>\n                    <Select defaultValue=\"\" id=\"grouped-select\">\n                        <MenuItem value=\"\">\n                        <em>業種</em>\n                        </MenuItem>\n                        {industryList.map(industry => (\n                            <MenuItem\n                            value={industry.name}\n                            onClick={() => {\n                                setInput({\n                                    ...input,\n                                    industry: {id: industry.id, name: industry.name}\n                                });\n                            }}\n                            >{industry.name}</MenuItem>\n                        ))\n                        }\n                    </Select>\n                    </FormControl>\n                </div>\n            </div>\n            <div className=\"form-footer\">\n                <div>\n                    <Button\n                        type=\"submit\"\n                        name=\"action\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        value={JSON.stringify(input)}\n                        className={buttonClasses.button}\n                        id=\"btn\"\n                        disabled={!input.email || !input.prefecture.id || !input.stage.id || !input.industry.id} \n                        onClick={() => {saveUserInfo();postData()}}\n                    >\n                        この条件で登録\n                    </Button>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n// components\nimport { Screen } from './components/Screen.jsx';\nimport { Form } from './components/Form.jsx';\nimport { Content } from './components/Content.jsx';\nimport { Index } from './components/Index.jsx';\nimport { Setting } from './components/Setting.jsx';\n\n\nconst info = localStorage.getItem(\"info\");\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        // root\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n              info ? (\n                <Screen\n                className=\"responsive\"\n                />\n              ) : (\n                  <Setting\n                  to=\"/setting\"\n                  onClickInitButton = {() => window.location.reload()}\n                  />\n              )\n          )}\n        />\n        // form\n        <Route\n          exact\n          path=\"/setting\">\n          <Setting\n          className=\"responsive\"\n          />\n        </Route>\n        // root\n        <Route\n          exact\n          path=\"/content\">\n          <Content\n          className=\"responsive\"\n          />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from 'redux'\n\n// initial state\nexport const initialState = {\n  content: {\n      \"id\": \"\",\n      \"title\": \"\",\n      \"subtitle\": \"\",\n      \"target\": \"\",\n      \"summary\": \"\",\n      \"body\": \"\",\n      \"usage\": \"\",\n      \"inquiry\": \"\",\n  },\n  post: [],\n  loading: true,\n}\n\n// reducer\nexport const reducer = (\n    state = initialState, // { post: null, loading: false }\n    { type, payload }\n  ) => {\n    switch (type) {\n      case 'REQUEST_FETCH_DATA':\n        return { ...state, loading: true };\n      case 'SUCCESS_FETCH_CONTENT':\n        return { ...state, loading: false, content: payload };\n      case 'SUCCESS_FETCH_INDEX':\n        return { ...state, loading: false, post: payload };\n      default:\n        return state;\n    }\n  };\n\n\nexport const store = createStore(reducer, initialState)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\"\nimport {store} from \"./modules/reducer\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}